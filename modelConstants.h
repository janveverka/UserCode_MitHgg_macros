#ifndef MODEL_CONSTANTS
#define MODEL_CONSTANTS

#include "TString.h"

void initMassArrayMap(int numMasses, double* masses, std::map<double,int>& map) {
  
  for(int iMass=0; iMass<numMasses; ++iMass)
    map.insert(std::pair<double,int>(masses[iMass],iMass));

  return;
}

//---making cross section and branching ratio as funciton of mass---
const int numsmpoints = 81;
//mass 
double smmasses[numsmpoints] = {110.0,110.5,111.0,111.5,112.0,112.5,113.0,113.5,114.0,114.5,115.0,115.5,116.0,116.5,117.0,117.5,118.0,118.5,119.0,119.5,120.0,120.5,121.0,121.5,122.0,122.5,123.0,123.5,124.0,124.5,125.0,125.5,126.0,126.5,127.0,127.5,128.0,128.5,129.0,129.5,130.0,130.5,131.0,131.5,132.0,132.5,133.0,133.5,134.0,134.5,135.0,135.5,136.0,136.5,137.0,137.5,138.0,138.5,139.0,139.5,140.0,140.5,141.0,141.5,142.0,142.5,143.0,143.5,144.0,144.5,145.0,145.5,146.0,146.5,147.0,147.5,148.0,148.5,149.0,149.5,150.0};  

//total cross section times branching ratio 
double smxsbr[numsmpoints]  = {0.04474106,0.04476087,0.04458980,0.04461816,0.04465764,0.04445241,0.04450231,0.04452202,0.04432575,0.04435697,0.04417173,0.04419175,0.04402058,0.04382749,0.04365297,0.04367220,0.04349037,0.04330598,0.04314091,0.04297301,0.04277804,0.04260475,0.04226444,0.04208721,0.04190975,0.04154534,0.04122657,0.04106506,0.04072321,0.04038161,0.04006593,0.03972509,0.03940765,0.03909069,0.03877650,0.03846030,0.03797801,0.03766622,0.03721147,0.03689953,0.03645195,0.03600491,0.03556311,0.03514415,0.03470779,0.03427222,0.03370990,0.03328123,0.03290089,0.03235105,0.03180601,0.03141397,0.03087743,0.03034568,0.02981916,0.02933985,0.02882227,0.02830964,0.02782357,0.02733986,0.02672205,0.02624931,0.02578068,0.02525736,0.02473893,0.02414999,0.02356720,0.02307409,0.02258560,0.02202963,0.02147946,0.02101546,0.02055579,0.02003015,0.01950998,0.01893346,0.01836331,0.01786838,0.01737859,0.01683392,0.01629523};
double ffxsbr[numsmpoints]   = {0.16346707,0.153639388,0.144474184,0.135978954,0.128011936,0.120580658,0.113698278,0.1072188,0.101204298,0.095574901,0.090277395,0.085366199,0.080723132,0.076390615,0.072348276,0.068536512,0.064981344,0.061626793,0.058491355,0.055518848,0.052712643,0.050108436,0.047635539,0.045289044,0.043111872,0.041038726,0.0390816,0.03724344,0.035498398,0.033842835,0.032293386,0.03081212,0.029395632,0.028062999,0.026825547,0.025612992,0.024479542,0.023414238,0.02239302,0.021406322,0.020504886,0.01962496,0.018787808,0.0179886462,0.0172365732,0.0165092732,0.0158259735,0.0151657605,0.014543112,0.0139496598,0.01338225,0.0128386206,0.012320084,0.0118226735,0.0113473074,0.010898992,0.0104629713,0.010045404,0.0096510688,0.0092662975,0.0088983973,0.0085471461,0.0082114608,0.007885017,0.007570577,0.0072704658,0.0069803288,0.0067006628,0.0064322028,0.00617446755,0.005927448,0.005686585,0.00545616,0.005232885,0.0050181952,0.00480948195,0.004609108,0.0044133128,0.0042256148,0.0040421231,0.0038650707};

//branching ratio
double smbr[numsmpoints] = {0.00197,0.00199,0.002,0.00202,0.00204,0.00205,0.00207,0.00209,0.0021,0.00212,0.00213,0.00215,0.00216,0.00217,0.00218,0.0022,0.00221,0.00222,0.00223,0.00224,0.00225,0.00226,0.00226,0.00227,0.00228,0.00228,0.00228,0.00229,0.00229,0.00229,0.00229,0.00229,0.00229,0.00229,0.00229,0.00229,0.00228,0.00228,0.00227,0.00227,0.00226,0.00225,0.00224,0.00223,0.00222,0.00221,0.00219,0.00218,0.00217,0.00215,0.00213,0.00212,0.0021,0.00208,0.00206,0.00204,0.00202,0.002,0.00198,0.00196,0.00193,0.00191,0.00189,0.001865,0.00184,0.00181,0.00178,0.001755,0.00173,0.0017,0.00167,0.001645,0.00162,0.00159,0.00156,0.001525,0.00149,0.00146,0.00143,0.001395,0.00136};
double ffbr[numsmpoints] = {0.059540,0.056510,0.053660,0.050980,0.048460,0.046090,0.043860,0.041760,0.039780,0.037910,0.036150,0.034490,0.032920,0.031430,0.030030,0.028710,0.027460,0.026270,0.025150,0.024080,0.023070,0.022120,0.021210,0.020340,0.019520,0.018740,0.018000,0.017300,0.016630,0.015990,0.015380,0.014800,0.014240,0.013710,0.013210,0.012720,0.012260,0.011820,0.011400,0.010990,0.010610,0.010240,0.009880,0.009539,0.009212,0.008897,0.008595,0.008305,0.008026,0.007758,0.007500,0.007251,0.007012,0.006781,0.006558,0.006344,0.006137,0.005937,0.005744,0.005557,0.005377,0.005202,0.005034,0.004870,0.004711,0.004558,0.004409,0.004264,0.004124,0.003987,0.003855,0.003725,0.003600,0.003477,0.003358,0.003241,0.003128,0.003016,0.002908,0.002801,0.002697};
double sm4br[numsmpoints] = {4.40E-005,0.000043685,0.00004337,0.000043055,0.00004274,0.000042425,0.00004211,0.000041795,0.00004148,0.000041165,0.00004085,0.000040535,0.00004022,0.000039905,0.00003959,0.000039275,0.00003896,0.000038645,0.00003833,0.000038015,3.77E-005,0.00003717,0.00003664,0.00003611,0.00003558,0.00003505,0.00003452,0.00003399,0.00003346,0.00003293,0.0000324,0.00003187,0.00003134,0.00003081,0.00003028,0.00002975,0.00002922,0.00002869,0.00002816,0.00002763,2.71E-005,0.000026395,0.00002569,0.000024985,0.00002428,0.000023575,0.00002287,0.000022165,0.00002146,0.000020755,0.00002005,0.000019345,0.00001864,0.000017935,0.00001723,0.000016525,0.00001582,0.000015115,0.00001441,0.000013705,1.30E-005,0.000012421,0.000011842,0.000011263,0.000010684,0.000010105,0.000009526,0.000008947,0.000008368,0.000007789,0.00000721,0.000006631,0.000006052,0.000005473,0.000004894,0.000004315,0.000003736,0.000003157,0.000002578,0.000001999,1.42E-006};

//cross section for different production mechanism
double gghxsec[numsmpoints] = {19.840,19.650,19.480,19.300,19.130,18.950,18.790,18.620,18.450,18.290,18.130,17.970,17.820,17.660,17.510,17.360,17.210,17.060,16.920,16.780,16.630,16.490,16.360,16.220,16.080,15.940,15.820,15.690,15.560,15.430,15.310,15.180,15.060,14.940,14.820,14.700,14.580,14.460,14.350,14.230,14.120,14.010,13.900,13.800,13.690,13.580,13.480,13.370,13.280,13.180,13.080,12.980,12.880,12.780,12.680,12.600,12.500,12.400,12.310,12.220,12.130,12.0,11.950,11.9,11.780,11.7,11.600,11.5,11.440,11.4,11.270,11.2,11.120,11.0,10.960,10.9,10.800,10.7,10.650,10.6,10.500};      

double vbfxsec[numsmpoints] = {1.3980,1.3910,1.3840,1.3780,1.3710,1.3640,1.3580,1.3510,1.3450,1.3390,1.3320,1.3260,1.3190,1.3130,1.3070,1.3000,1.2940,1.2880,1.2820,1.2760,1.2690,1.2630,1.2570,1.2510,1.2460,1.2400,1.2340,1.2280,1.2220,1.2160,1.2110,1.2050,1.1990,1.1930,1.1880,1.1820,1.1760,1.1710,1.1650,1.1590,1.1540,1.1480,1.1430,1.1370,1.1320,1.1260,1.1210,1.1150,1.1100,1.1050,1.1000,1.0950,1.0900,1.0850,1.0800,1.0760,1.0710,1.0660,1.0620,1.0570,1.0520,1.0475,1.0430,1.0380,1.0330,1.0280,1.0230,1.0180,1.0130,1.0085,1.0040,0.9996,0.9951,0.9909,0.9866,0.9824,0.9782,0.9741,0.9699,0.9658,0.9617};
double whxsec[numsmpoints] = {0.8754,0.8623,0.8495,0.8368,0.8244,0.8122,0.8003,0.7885,0.7770,0.7657,0.7546,0.7439,0.7333,0.7230,0.7129,0.7030,0.6933,0.6837,0.6744,0.6651,0.6561,0.6472,0.6384,0.6297,0.6212,0.6129,0.6046,0.5965,0.5885,0.5806,0.5729,0.5652,0.5576,0.5501,0.5428,0.5355,0.5284,0.5213,0.5144,0.5075,0.5008,0.4942,0.4877,0.4813,0.4749,0.4687,0.4626,0.4566,0.4506,0.4448,0.4390,0.4333,0.4277,0.4221,0.4167,0.4113,0.4060,0.4008,0.3957,0.3907,0.3857,0.3809,0.3761,0.3715,0.3669,0.3624,0.3579,0.3535,0.3491,0.3449,0.3406,0.3364,0.3321,0.3280,0.3238,0.3198,0.3157,0.3118,0.3078,0.3040,0.3001};
double zhxsec[numsmpoints] = {0.4721,0.4655,0.4589,0.4525,0.4462,0.4400,0.4340,0.4280,0.4221,0.4164,0.4107,0.4052,0.3998,0.3945,0.3893,0.3842,0.3791,0.3742,0.3693,0.3645,0.3598,0.3551,0.3505,0.3459,0.3414,0.3370,0.3326,0.3283,0.3241,0.3199,0.3158,0.3117,0.3077,0.3038,0.2999,0.2961,0.2923,0.2886,0.2849,0.2813,0.2778,0.2743,0.2709,0.2675,0.2642,0.2609,0.2577,0.2545,0.2514,0.2483,0.2453,0.2423,0.2393,0.2364,0.2336,0.2307,0.2279,0.2252,0.2225,0.2198,0.2172,0.2147,0.2121,0.2096,0.2071,0.2047,0.2023,0.2000,0.1976,0.1953,0.1930,0.1907,0.1884,0.1862,0.1840,0.1818,0.1796,0.1775,0.1754,0.1734,0.1713};

double tthxsec[numsmpoints] = {0.12570,0.12410,0.12250,0.12090,0.11940,0.11790,0.11640,0.11490,0.11340,0.11200,0.11060,0.10920,0.10780,0.10650,0.10510,0.10380,0.10250,0.10130,0.10000,0.09878,0.09756,0.09636,0.09518,0.09402,0.09287,0.09174,0.09063,0.08954,0.08846,0.08739,0.08634,0.08530,0.08428,0.08327,0.08227,0.08129,0.08032,0.07937,0.07842,0.07750,0.07658,0.07568,0.07479,0.07391,0.07304,0.07219,0.07135,0.07052,0.06970,0.06890,0.06810,0.06731,0.06654,0.06577,0.06502,0.06428,0.06355,0.06282,0.06211,0.06141,0.06072,0.06005,0.05937,0.05872,0.05807,0.05744,0.05680,0.05618,0.05556,0.05496,0.05435,0.05376,0.05316,0.05258,0.05200,0.05144,0.05087,0.05032,0.04976,0.04923,0.04869};
double sm4gghxsec[numsmpoints] = {199,197.3,195.6,193.9,192.2,190.5,188.8,187.1,185.4,183.7,182,180.3,178.6,176.9,175.2,173.5,171.8,170.1,168.4,166.7,165,163.65,162.3,160.95,159.6,158.25,156.9,155.55,154.2,152.85,151.5,150.15,148.8,147.45,146.1,144.75,143.4,142.05,140.7,139.35,138,136.95,135.9,134.85,133.8,132.75,131.7,130.65,129.6,128.55,127.5,126.45,125.4,124.35,123.3,122.25,121.2,120.15,119.1,118.05,117,116,115,114,113,112,111,110,109,108,107,106.22,105.44,104.66,103.88,103.1,102.32,101.54,100.76,99.98,99.2};

double wzhxsec[numsmpoints];

double nullarray[numsmpoints];

void initProcessCSArrayMap(std::map<TString,double*>& processCrossSectionMap) {

  processCrossSectionMap.insert(std::pair<TString,double*>("gghxsec",gghxsec));
  processCrossSectionMap.insert(std::pair<TString,double*>("sm4gghxsec",sm4gghxsec));
  processCrossSectionMap.insert(std::pair<TString,double*>("vbfxsec",vbfxsec));

  for(int i=0; i<numsmpoints; ++i)
    wzhxsec[i] = whxsec[i] + zhxsec[i];

  processCrossSectionMap.insert(std::pair<TString,double*>("wzhxsec",wzhxsec));
  processCrossSectionMap.insert(std::pair<TString,double*>("tthxsec",tthxsec));

  processCrossSectionMap.insert(std::pair<TString,double*>("smbr",smbr));
  processCrossSectionMap.insert(std::pair<TString,double*>("ffbr",ffbr));
  processCrossSectionMap.insert(std::pair<TString,double*>("sm4br",sm4br));

  for(int iMass=0; iMass<numsmpoints; ++iMass) nullarray[iMass] = 0.;
  processCrossSectionMap.insert(std::pair<TString,double*>("null",nullarray));
  
  return;
}

#endif
